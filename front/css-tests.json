{
    "1": [
      {
        "question": "Как задаются стили в Inline CSS?",
        "answers": [
          "Внутри тега &lt;style&gt; в &lt;head&gt; секции.",
          "Через атрибут `class`.",
          "Внутри тега HTML с использованием атрибута `style`.",
          "Через отдельный файл стилей (`style.css`)."
        ],
        "correct": 2
      },
      {
        "question": "Каким образом используется Internal CSS?",
        "answers": [
          "С помощью тега &lt;link&gt; в &lt;head&gt; секции.",
          "Через атрибут `style` внутри тега HTML.",
          "Внутри файла `.css`.",
          "Внутри тега &lt;div&gt;."
        ],
        "correct": 1
      },
      {
        "question": "Как создается External CSS?",
        "answers": [
          "С помощью тега &lt;style&gt; внутри &lt;head&gt; секции.",
          "Через атрибут `style` в HTML.",
          "Создается отдельный файл `.css`, подключаемый с помощью тега &lt;link&gt;.",
          "Использование JavaScript."
        ],
        "correct": 2
      },
      {
        "question": "Какие компоненты содержит внешний файл стилей (.css)?",
        "answers": [
          "Основные стили HTML страницы.",
          "Стили для определения цвета фона страницы.",
          "Стили для текста, цвета, размеров, расположения элементов.",
          "Только стили для картинок."
        ],
        "correct": 2
      },
      {
        "question": "Какой совет можно дать новичкам во фронтенд-разработке при использовании CSS?",
        "answers": [
          "Объединять все стили в один файл.",
          "Стараться разделять структуру HTML, стили CSS и функциональность JavaScript.",
          "Использовать только внутренние стили.",
          "Не беспокоиться о структуре кода."
        ],
        "correct": 1
      },
      {
        "question": "Что такое Inline CSS?",
        "answers": [
          "Метод подключения внешних стилей.",
          "Задавание стилей внутри самого HTML тега с использованием атрибута `style`.",
          "Использование тега &lt;link&gt;.",
          "Создание отдельного файла стилей."
        ],
        "correct": 1
      },
      {
        "question": "Какой пример является правильным использованием External CSS?",
        "answers": [
          "&lt;link rel='stylesheet' href='style.css'&gt;",
          "&lt;style&gt;body {background-color: #f0f0f0;}&lt;/style&gt;",
          "&lt;div style='color: red;'&gt;Пример&lt;/div&gt;",
          "&lt;p style='font-size: 16px;'&gt;Пример&lt;/p&gt;"
        ],
        "correct": 0
      },
      {
        "question": "Какие элементы можно стилизовать с помощью Internal CSS?",
        "answers": [
          "Только теги &lt;div&gt;.",
          "Любые элементы HTML страницы.",
          "Только текстовые элементы.",
          "Только изображения."
        ],
        "correct": 1
      },
      {
        "question": "Какие свойства можно использовать для форматирования текста с помощью CSS?",
        "answers": [
          "color, font-size, background-color.",
          "align-items, flex-direction.",
          "width, height, margin.",
          "border, padding, display."
        ],
        "correct": 0
      },
      {
        "question": "Что делает External CSS более предпочтительным для организации стилей?",
        "answers": [
          "Позволяет объединить стили всех страниц сайта в один файл.",
          "Использует только внутренние стили.",
          "Создает стили только для одной страницы.",
          "Преимущественно используется для динамического стиля контента."
        ],
        "correct": 0
      }
      ],  
    "2": [
      {
        "question": "Что такое CSS?",
        "answers": [
          "JavaScript, используемый для создания анимаций",
          "Язык стилей для описания внешнего вида HTML-документа",
          "Технология для создания интерактивных элементов",
          "Рамка для проектирования веб-страниц"
        ],
        "correct": 1
      },
      {
        "question": "Какой синтаксис используется для создания inline CSS?",
        "answers": [
          "&lt;style&gt;...&lt;/style&gt;",
          "style='color: red; font-size: 16px;'",
          "@media screen { color: blue; }",
          "link rel='stylesheet' href='style.css'"
        ],
        "correct": 1
      },
      {
        "question": "Как выбрать элемент с классом 'example'?",
        "answers": [
          "element.example",
          ".example",
          "select .example",
          "#example"
        ],
        "correct": 1
      },
      {
        "question": "Как выравнивать элементы с помощью Flexbox?",
        "answers": [
          "flex-direction: row; align-items: center;",
          "display: flex; justify-content: space-between;",
          "float: left; margin: 5px;",
          "text-align: center;"
        ],
        "correct": 1
      },
      {
        "question": "Что такое CSS Grid?",
        "answers": [
          "Метод позиционирования для создания линейных макетов",
          "Флексбокс-система для вертикального выравнивания",
          "Сетка для создания адаптивных макетов",
          "Метод для создания анимаций"
        ],
        "correct": 2
      }
      ],
      "7": [
        {
          "question": "Что такое принцип наследования CSS?",
          "answers": [
            "Метод позиционирования элементов",
            "Способ управления анимациями в CSS",
            "Процесс, при котором элементы наследуют свойства от родительских элементов",
            "Функция для изменения фонового цвета"
          ],
          "correct": 2
        },
        {
          "question": "Какие свойства по умолчанию наследуются от родительских элементов в CSS?",
          "answers": [
            "font-size, font-family, background-color",
            "color, margin, padding",
            "border, text-align, display",
            "width, height, float"
          ],
          "correct": 0
        },
        {
          "question": "Как выглядит пример наследования в CSS?",
          "answers": [
            "body { display: flex; } .content { flex-grow: 1; }",
            "body { font-family: Arial, sans-serif; color: #333; } .content { font-size: 18px; }",
            "body { background-color: blue; } .content { background-color: red; }",
            "body { text-align: center; } .content { text-align: left; }"
          ],
          "correct": 1
        },
        {
          "question": "Как можно отменить наследование размера шрифта для элемента?",
          "answers": [
            ".special-text { font-size: inherit; }",
            ".special-text { font-size: 16px; }",
            ".special-text { font-family: inherit; }",
            ".special-text { color: inherit; }"
          ],
          "correct": 1
        },
        {
          "question": "Личный совет для новичков во фронтенд-разработке включает следующее:",
          "answers": [
            "Игнорировать наследование, чтобы упростить процесс разработки",
            "Использовать принцип наследования для структурирования стилей и упрощения кода",
            "Использовать только наследование для всех элементов",
            "Не обращать внимание на цепочку наследования"
          ],
          "correct": 1
        }
      ], 
      "8": [
        {
          "question": "Как определяются приоритеты стилей CSS?",
          "answers": [
            "На основе специфичности селекторов, веса важности и порядка объявления",
            "Только на основе цвета текста",
            "Только на основе размеров шрифта",
            "На основе числа вложенных селекторов"
          ],
          "correct": 0
        },
        {
          "question": "Какой селектор имеет наибольшую специфичность?",
          "answers": [
            ".class",
            "#id",
            "p",
            "div"
          ],
          "correct": 1
        },
        {
          "question": "Какое свойство CSS имеет наивысший приоритет?",
          "answers": [
            "border",
            "font-size",
            "color: blue;",
            "color: green !important"
          ],
          "correct": 3
        },
        {
          "question": "Что происходит при конфликте между двумя правилами CSS с одинаковой специфичностью и весом важности?",
          "answers": [
            "Правило с последним объявлением имеет приоритет",
            "Первое правило имеет приоритет",
            "Ничего не происходит, стили остаются прежними",
            "Правила применяются по очереди"
          ],
          "correct": 0
        },
        {
          "question": "Какие рекомендации даны для работы с приоритетами правил CSS?",
          "answers": [
            "Создавать сложные селекторы и использовать много !important",
            "Создавать чистые и логичные структуры стилей, избегая излишнего использования !important",
            "Игнорировать специфичность и использовать только !important",
            "Использовать только inline стили для всех элементов"
          ],
          "correct": 1
        }
      ],
      "10": [
        {
          "question": "Какие свойства используются для создания внутренних отступов элемента в CSS?",
          "answers": [
            "padding-top, padding-bottom, padding-left, padding-right",
            "margin-top, margin-bottom, margin-left, margin-right",
            "border-top, border-bottom, border-left, border-right",
            "color, font-size, text-align"
          ],
          "correct": 0
        },
        {
          "question": "Что определяет свойство `margin` в CSS?",
          "answers": [
            "Внутренние отступы вокруг элемента",
            "Внешние отступы вокруг элемента",
            "Положение элемента на странице",
            "Цвет текста элемента"
          ],
          "correct": 1
        },
        {
          "question": "Как задать разные внешние отступы для каждого края элемента?",
          "answers": [
            "margin-left, margin-right, margin-bottom, margin-top",
            "padding-left, padding-right, padding-bottom, padding-top",
            "border-left, border-right, border-bottom, border-top",
            "text-align, color, font-size"
          ],
          "correct": 0
        },
        {
          "question": "Какие свойства CSS используются для управления внутренними отступами сверху и снизу элемента?",
          "answers": [
            "padding-top, padding-bottom",
            "margin-top, margin-bottom",
            "border-top, border-bottom",
            "color, font-size"
          ],
          "correct": 0
        },
        {
          "question": "Как рекомендуется использовать внутренние и внешние отступы в макетировании веб-страниц?",
          "answers": [
            "Злоупотреблять отступами для создания большого пространства между элементами",
            "Использовать внутренние и внешние отступы для улучшения читабельности и эстетики, но не злоупотреблять",
            "Не использовать отступы, чтобы не нарушить сетку макета",
            "Использовать только внешние отступы для выравнивания элементов"
          ],
          "correct": 1
        }
      ],
      "11": [
        {
          "question": "Что делает стандартное позиционирование (`static`) в CSS?",
          "answers": [
            "Позиционирует элемент относительно ближайшего родителя",
            "Элемент располагается в потоке документа в порядке, заданном в HTML",
            "Элемент фиксируется на экране при прокрутке страницы",
            "Элемент позиционируется на абсолютных координатах"
          ],
          "correct": 1
        },
        {
          "question": "Как позиционируется элемент с `position: absolute`?",
          "answers": [
            "Относительно родителя с позиционированием (не static)",
            "Относительно окна браузера",
            "Относительно верхнего угла страницы",
            "Относительно body документа"
          ],
          "correct": 0
        },
        {
          "question": "Что означает позиционирование `relative` в CSS?",
          "answers": [
            "Элемент перемещается относительно его обычного расположения в потоке документа",
            "Элемент фиксируется в определенной позиции на экране",
            "Элемент занимает определенные координаты на экране",
            "Элемент остается в своем месте при прокрутке страницы"
          ],
          "correct": 0
        },
        {
          "question": "Как фиксированное позиционирование (`position: fixed`) работает в CSS?",
          "answers": [
            "Элемент остается на своем месте при прокрутке страницы",
            "Элемент перемещается относительно окна браузера",
            "Элемент занимает абсолютные координаты",
            "Элемент привязывается к ближайшему родителю"
          ],
          "correct": 1
        },
        {
          "question": "Когда используется `position: static`?",
          "answers": [
            "По умолчанию, если не указано другое",
            "Для абсолютного позиционирования относительно body",
            "Для изменения координат элемента относительно родителя",
            "Для фиксированного позиционирования на экране"
          ],
          "correct": 0
        },
        {
          "question": "Какие свойства используются для изменения позиции элемента относительно его родителя с `position: relative`?",
          "answers": [
            "top, right, bottom, left",
            "position: absolute;",
            "display: flex;",
            "margin, padding"
          ],
          "correct": 0
        },
        {
          "question": "Какая специфичность селектора `#id` по сравнению с `.class`?",
          "answers": [
            "Они имеют одинаковую специфичность",
            "`#id` более специфичный",
            "`.class` более специфичный",
            "Они имеют низкую специфичность"
          ],
          "correct": 1
        },
        {
          "question": "Какие свойства используются для настройки внешних отступов (`margin`)?",
          "answers": [
            "margin: 15px;",
            "margin-top: 10px; margin-right: 15px;",
            "margin-left: 5px;",
            "margin: auto;"
          ],
          "correct": 1
        },
        {
          "question": "Что такое CSS Grid?",
          "answers": [
            "Метод позиционирования для создания линейных макетов",
            "Флексбокс-система для вертикального выравнивания",
            "Сетка для создания адаптивных макетов",
            "Метод для создания анимаций"
          ],
          "correct": 2
        },
        {
          "question": "Как использовать !important в CSS?",
          "answers": [
            "Указывает на наивысший приоритет правила",
            "Используется для добавления комментариев к коду",
            "Для выравнивания элементов",
            "Для отмены любых других стилей"
          ],
          "correct": 0
        }
      ],
      
      "12": [
        {
          "question": "Что такое блочное размещение (`display: block`) в CSS?",
          "answers": [
            "Элементы занимают всю доступную ширину родительского контейнера и начинают новый ряд",
            "Элементы занимают только необходимое пространство для содержимого и не начинают новый ряд",
            "Элементы выравниваются по вертикали в контейнере",
            "Элементы создают сетку из ячеек"
          ],
          "correct": 0
        },
        {
          "question": "Как работает инлайн-блочное размещение (`display: inline-block`)?",
          "answers": [
            "Элементы занимают всю доступную ширину родительского контейнера и начинают новый ряд",
            "Элементы занимают только необходимое пространство для содержимого и не начинают новый ряд",
            "Элементы выравниваются по вертикали и горизонтали",
            "Элементы создают сетку из ячеек"
          ],
          "correct": 1
        },
        {
          "question": "Что такое Flexbox (`display: flex`) в CSS?",
          "answers": [
            "Метод позиционирования для создания линейных макетов",
            "Флексбокс-система для горизонтального выравнивания элементов",
            "Система для создания адаптивных макетов с гибким распределением элементов",
            "Метод для создания анимаций"
          ],
          "correct": 2
        },
        {
          "question": "Как используется сеточное размещение (`display: grid`)?",
          "answers": [
            "Элементы выравниваются по горизонтали в контейнере",
            "Сетка из ячеек для распределения элементов с определенной шириной",
            "Элементы размещаются в одном ряду",
            "Элементы создают сетку из блоков"
          ],
          "correct": 1
        },
        {
          "question": "Как задается пропорциональная ширина колонок в CSS Grid?",
          "answers": [
            "grid-column: 1fr 2fr;",
            "flex-basis: 1fr 2fr;",
            "width: 1fr 2fr;",
            "grid-template-columns: 1fr 2fr;"
          ],
          "correct": 3
        },
        {
          "question": "Какие свойства используются для выравнивания элементов в Flexbox?",
          "answers": [
            "justify-content, align-items",
            "margin, padding",
            "position, top",
            "display, flex-direction"
          ],
          "correct": 0
        },
        {
          "question": "Какой эффект создается с помощью `display: block`?",
          "answers": [
            "Создание новой строки для элементов",
            "Элементы занимают всю доступную ширину контейнера",
            "Элементы распределяются по вертикали",
            "Элементы создают сетку из ячеек"
          ],
          "correct": 1
        },
        {
          "question": "Что такое `display: flex`?",
          "answers": [
            "Метод позиционирования для создания линейных макетов",
            "Флексбокс-система для вертикального выравнивания",
            "Сетка для создания адаптивных макетов",
            "Метод для создания анимаций"
          ],
          "correct": 2
        },
        {
          "question": "Какие свойства определяют размещение элементов в сетке (`display: grid`)?",
          "answers": [
            "grid-template-columns, gap",
            "flex-direction, align-items",
            "position, top",
            "justify-content, align-items"
          ],
          "correct": 0
        },
        {
          "question": "Как можно выровнять элементы по центру в Flexbox?",
          "answers": [
            "justify-content: center; align-items: center;",
            "display: block; text-align: center;",
            "margin: auto;",
            "flex-direction: row;"
          ],
          "correct": 0
        }
      ]
  }